{
  "api/Unosquare.FFME.html": {
    "href": "api/Unosquare.FFME.html",
    "title": "Namespace Unosquare.FFME | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Namespace Unosquare.FFME Classes Library MediaElement Represents a control that contains audio and/or video. In contrast with System.Windows.Controls.MediaElement, this version uses the FFmpeg library to perform reading and decoding of media streams. Subtitles Defines attached properties for subtitle rendering. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.RendererOptions.html": {
    "href": "api/Unosquare.FFME.Common.RendererOptions.html",
    "title": "Class RendererOptions | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class RendererOptions Provides access to various internal media renderer options. Inheritance Object RendererOptions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class RendererOptions Properties AudioDisableSync By default, the audio renderer will skip or wait for samples to synchronize to video. Declaration public bool AudioDisableSync { get; set; } Property Value Type Description Boolean DirectSoundDevice Gets or sets the DirectSound device identifier. It is the default playback device by default. Only valid if UseLegacyAudioOut is set to false which is the default. Declaration public DirectSoundDeviceInfo DirectSoundDevice { get; set; } Property Value Type Description DirectSoundDeviceInfo LegacyAudioDevice Gets or sets the wave device identifier. -1 is the default playback device. Only valid if UseLegacyAudioOut is set to true. Declaration public LegacyAudioDeviceInfo LegacyAudioDevice { get; set; } Property Value Type Description LegacyAudioDeviceInfo UseLegacyAudioOut Gets or sets a value indicating whether the legacy MME (WinMM) should be used as an audio output device as opposed to DirectSound. This defaults to false. Declaration public bool UseLegacyAudioOut { get; set; } Property Value Type Description Boolean VideoRefreshRateLimit Gets or sets the frame refresh rate limit for the video renderer. Defaults to 0 and means no limit. Units are in frames per second. Declaration public int VideoRefreshRateLimit { get; set; } Property Value Type Description Int32 Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.AudioDeviceInfo-1.html": {
    "href": "api/Unosquare.FFME.Common.AudioDeviceInfo-1.html",
    "title": "Class AudioDeviceInfo<T> | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class AudioDeviceInfo<T> Represents a device identifier. Inheritance Object AudioDeviceInfo<T> DirectSoundDeviceInfo LegacyAudioDeviceInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public class AudioDeviceInfo<T> where T : struct Type Parameters Name Description T The type of the device identifier. Properties DeviceId Gets the device identifier. Declaration public T DeviceId { get; } Property Value Type Description T IsDefault Gets a value indicating whether this device is the default. Declaration public bool IsDefault { get; } Property Value Type Description Boolean Name Gets the name. Declaration public string Name { get; } Property Value Type Description String Provider Gets the provider. Declaration public string Provider { get; } Property Value Type Description String Tag Gets the tag. Declaration public string Tag { get; } Property Value Type Description String Methods ToString() Returns a String that represents this instance. Declaration public override string ToString() Returns Type Description String A String that represents this instance. Overrides Object.ToString() Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Subtitles.html": {
    "href": "api/Unosquare.FFME.Subtitles.html",
    "title": "Class Subtitles | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class Subtitles Defines attached properties for subtitle rendering. Inheritance Object Subtitles Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME Syntax public sealed class Subtitles Fields EffectProperty The text foreground effect dependency property. Declaration public static readonly DependencyProperty EffectProperty Field Value Type Description DependencyProperty FontFamilyProperty The font family property. Declaration public static readonly DependencyProperty FontFamilyProperty Field Value Type Description DependencyProperty FontSizeProperty The font size property. Declaration public static readonly DependencyProperty FontSizeProperty Field Value Type Description DependencyProperty FontWeightProperty The font weight property. Declaration public static readonly DependencyProperty FontWeightProperty Field Value Type Description DependencyProperty ForegroundProperty The foreground text property. Declaration public static readonly DependencyProperty ForegroundProperty Field Value Type Description DependencyProperty OutlineBrushProperty The text outline brush dependency property. Declaration public static readonly DependencyProperty OutlineBrushProperty Field Value Type Description DependencyProperty OutlineWidthProperty The text outline width dependency property. Declaration public static readonly DependencyProperty OutlineWidthProperty Field Value Type Description DependencyProperty TextProperty The foreground text property. Declaration public static readonly DependencyProperty TextProperty Field Value Type Description DependencyProperty Methods GetEffect(MediaElement) Gets the effect. Declaration public static Effect GetEffect(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description Effect The value. GetFontFamily(MediaElement) Gets the font family. Declaration public static FontFamily GetFontFamily(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description FontFamily The value. GetFontSize(MediaElement) Gets the size of the font. Declaration public static double GetFontSize(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description Double The value. GetFontWeight(MediaElement) Gets the font weight. Declaration public static FontWeight GetFontWeight(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description FontWeight The value. GetForeground(MediaElement) Gets the text foreground. Declaration public static Brush GetForeground(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description Brush The value. GetOutlineBrush(MediaElement) Gets the outline brush. Declaration public static Brush GetOutlineBrush(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description Brush The value. GetOutlineWidth(MediaElement) Gets the width of the outline. Declaration public static Thickness GetOutlineWidth(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description Thickness The value. GetText(MediaElement) Gets the text. Declaration public static string GetText(MediaElement element) Parameters Type Name Description MediaElement element The object. Returns Type Description String The value. SetEffect(MediaElement, Effect) Sets the effect. Declaration public static void SetEffect(MediaElement element, Effect value) Parameters Type Name Description MediaElement element The object. Effect value The value. SetFontFamily(MediaElement, FontFamily) Sets the font family. Declaration public static void SetFontFamily(MediaElement element, FontFamily value) Parameters Type Name Description MediaElement element The object. FontFamily value The value. SetFontSize(MediaElement, Double) Sets the size of the font. Declaration public static void SetFontSize(MediaElement element, double value) Parameters Type Name Description MediaElement element The object. Double value The value. SetFontWeight(MediaElement, FontWeight) Sets the font weight. Declaration public static void SetFontWeight(MediaElement element, FontWeight value) Parameters Type Name Description MediaElement element The object. FontWeight value The value. SetForeground(MediaElement, Brush) Sets the text foreground. Declaration public static void SetForeground(MediaElement element, Brush value) Parameters Type Name Description MediaElement element The object. Brush value The value. SetOutlineBrush(MediaElement, Brush) Sets the outline brush. Declaration public static void SetOutlineBrush(MediaElement element, Brush value) Parameters Type Name Description MediaElement element The object. Brush value The value. SetOutlineWidth(MediaElement, Thickness) Sets the width of the outline. Declaration public static void SetOutlineWidth(MediaElement element, Thickness value) Parameters Type Name Description MediaElement element The object. Thickness value The value. SetText(MediaElement, String) Sets the text. Declaration public static void SetText(MediaElement element, string value) Parameters Type Name Description MediaElement element The object. String value The value. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Library.html": {
    "href": "api/Unosquare.FFME.Library.html",
    "title": "Class Library | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class Library Inheritance Object Library Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME Syntax public static class Library Properties DefaultDirectSoundDevice The default DirectSound device. Declaration public static DirectSoundDeviceInfo DefaultDirectSoundDevice { get; } Property Value Type Description DirectSoundDeviceInfo DefaultLegacyAudioDevice The default Windows Multimeda Extensions Legacy Audio Device. Declaration public static LegacyAudioDeviceInfo DefaultLegacyAudioDevice { get; } Property Value Type Description LegacyAudioDeviceInfo EnableWpfMultiThreadedVideo Gets or sets a value indicating whether the video visualization control creates its own dispatcher thread to handle rendering of video frames. This is an experimental feature and it is useful when creating video walls. For example if you want to display multiple videos at a time and don't want to use time from the main UI thread. This feature is only valid if we are in a WPF context. Declaration public static bool EnableWpfMultiThreadedVideo { get; set; } Property Value Type Description Boolean Methods EnumerateDirectSoundDevices() Enumerates the DirectSound devices. Declaration public static IEnumerable<DirectSoundDeviceInfo> EnumerateDirectSoundDevices() Returns Type Description IEnumerable < DirectSoundDeviceInfo > The available DirectSound devices. EnumerateLegacyAudioDevices() Enumerates the (Legacy) Windows Multimedia Extensions devices. Declaration public static IEnumerable<LegacyAudioDeviceInfo> EnumerateLegacyAudioDevices() Returns Type Description IEnumerable < LegacyAudioDeviceInfo > The available MME devices. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.LegacyAudioResult.html": {
    "href": "api/Unosquare.FFME.Common.LegacyAudioResult.html",
    "title": "Enum LegacyAudioResult | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Enum LegacyAudioResult Windows multimedia error codes from mmsystem.h. Namespace : Unosquare.FFME.Common Syntax public enum LegacyAudioResult Fields Name Description AcmBusy Busy AcmCancelled Cancelled AcmHeaderUnprepared Header Unprepared AcmNotPossible Conversion not possible AlreadyAllocated device already allocated BadDeviceId device ID out of range BadErrorNumber error value out of range BadRegistryDatabase bad registry database HandleBusy handle being used simultaneously on another thread (eg callback) InvalidAlias specified alias not found InvalidFlag invalid flag passed InvalidHandle device handle is invalid InvalidParameter invalid parameter passed MemoryAllocationError memory allocation error MixerInvalidControl invalid control MixerInvalidLine invalid line MixerInvalidValue invalid value MoreData more data to be returned NoDriver no device driver present NoDriverCallback driver does not call DriverCallback NoError no error NotEnabled driver failed enable NotSupported function isn't supported RegistryDeleteError registry delete error RegistryKeyNotFound registry key not found RegistryReadError registry read error RegistryValueNotFound registry value not found RegistryWriteError registry write error UnspecifiedError unspecified error WaveBadFormat unsupported wave format WaveHeaderUnprepared header not prepared WaveStillPlaying still something playing WaveSync device is synchronous Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.LegacyAudioDeviceInfo.html": {
    "href": "api/Unosquare.FFME.Common.LegacyAudioDeviceInfo.html",
    "title": "Class LegacyAudioDeviceInfo | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class LegacyAudioDeviceInfo Represents information about a legacy WinMM audio device. Inheritance Object AudioDeviceInfo < Int32 > LegacyAudioDeviceInfo Inherited Members AudioDeviceInfo<Int32>.DeviceId AudioDeviceInfo<Int32>.Name AudioDeviceInfo<Int32>.Provider AudioDeviceInfo<Int32>.Tag AudioDeviceInfo<Int32>.IsDefault AudioDeviceInfo<Int32>.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class LegacyAudioDeviceInfo : AudioDeviceInfo<int> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.DirectSoundDeviceInfo.html": {
    "href": "api/Unosquare.FFME.Common.DirectSoundDeviceInfo.html",
    "title": "Class DirectSoundDeviceInfo | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class DirectSoundDeviceInfo Represents information about a DirectSound audio device. Inheritance Object AudioDeviceInfo < Guid > DirectSoundDeviceInfo Inherited Members AudioDeviceInfo<Guid>.DeviceId AudioDeviceInfo<Guid>.Name AudioDeviceInfo<Guid>.Provider AudioDeviceInfo<Guid>.Tag AudioDeviceInfo<Guid>.IsDefault AudioDeviceInfo<Guid>.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class DirectSoundDeviceInfo : AudioDeviceInfo<Guid> Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "README.html": {
    "href": "README.html",
    "title": "FFME: The Advanced WPF MediaElement Alternative | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "FFME: The Advanced WPF MediaElement Alternative ⭐ Please star this project if you like it and show your appreciation via PayPal.Me Current NuGet Release Status If you would like to support this project, you can show your appreciation via PayPal.Me Current Status: (2019-04-19) - Release 4.1.300 is now available, (see the Releases ) NuGet Package available here: https://www.nuget.org/packages/FFME.Windows/ FFmpeg Version: 4.1.1 32-bit or 64-bit Please note the current NuGet realease might require a different version of the FFmpeg binaries than the ones of the current state of the source code. Quick Usage Guide for WPF Apps Here is a quick guide on how to get started. Open Visual Studio (v2019 recommended), and create a new WPF Application. Target Framework must be 4.6.1 or above. Install the NuGet Package from your Package Manager Console: PM> Install-Package FFME.Windows You need FFmpeg shared binaries (64 or 32 bit, depending on your app's target architecture). Build your own or download a compatible build from Zeranoe FFmpeg Builds site . Your FFmpeg build should have a bin folder with 3 exe files and some dll files. Copy all those files to a folder such as c:\\ffmpeg Within you application's startup code ( Main method), set Unosquare.FFME.Library.FFmpegDirectory = @\"c:\\ffmpeg\"; . Use the FFME MediaElement control as any other WPF control. For example: In your MainForm.xaml , add the namespace: xmlns:ffme=\"clr-namespace:Unosquare.FFME;assembly=ffme.win\" and then add the FFME control your window's XAML: <ffme:MediaElement x:Name=\"Media\" Background=\"Gray\" LoadedBehavior=\"Play\" UnloadedBehavior=\"Manual\" /> To play files or streams, simply set the Source property: Media.Source = new Uri(@\"c:\\your-file-here\"); . Since Source is a dependency property, it need to be set from the GUI thread. Note: To build your own FFmpeg binaries, I recommend the Media Autobuild Suite but please don't ask for help on it here. Additional Usage Notes Remember: The Unosquare.FFME.Windows.Sample provides usage examples for plenty of features. Use it as your main reference. The generated API documentation is available here Features Overview FFME is an advanced and close drop-in replacement for Microsoft's WPF MediaElement Control . While the standard MediaElement uses DirectX (DirectShow) for media playback, FFME uses FFmpeg to read and decode audio and video. This means that for those of you who want to support stuff like HLS playback, or just don't want to go through the hassle of installing codecs on client machines, using FFME might just be the answer. FFME provides multiple improvements over the standard MediaElement such as: Fast media seeking and frame-by-frame seeking Properties such as Position, Balance, SpeedRatio, IsMuted, and Volume are all Dependency Properties. Additional and extended media events. Extracting (and modifying) video, audio and subtitle frames is very easy. Easily apply FFmpeg video and audio filtergraphs. Extract media metadata and tech specs of a media stream (title, album, bit rate, codecs, FPS, etc). Apply volume, balance and speed ratio to media playback. MediaState actually works on this control. The standard WPF MediaElement severely lacks in this area. Ability to pick media streams contained in a file or a URL. Specify input and codec parameters. Opt-in hardware decoding acceleration via devices or via codecs. Capture stream packets, audio, video and subtitle frames Perform custom stream reading and stream recording ... all in a single MediaElement control FFME also supports opening capture devices. See example Source URLs below and issue #48 device://dshow/?audio=Microphone (Vengeance 2100):video=MS Webcam 4000 device://gdigrab?title=Command Prompt device://gdigrab?desktop If you'd like audio to not change pitch while changing the SpeedRatio property, you'll need the SoundTouch.dll library v2.1.1 available on the same directory as the FFmpeg binaries. You can get the SoundTouch library here . About how it works First off, let's review a few concepts. A packet is a group of bytes read from the input. All packets are of a specific MediaType (Audio, Video, Subtitle, Data), and contain some timing information and most importantly compressed data. Packets are sent to a Codec and in turn, the codec produces Frames . Please note that producing 1 frame does not always take exactly 1 packet . A packet may contain many frames but also a frame may require several packets for the decoder to build it. Frames will contain timing informattion and the raw, uncompressed data. Now, you may think you can use frames and show pixels on the screen or send samples to the sound card. We are close, but we still need to do some additional processing. Turns out different Codecs will produce different uncompressed data formats. For example, some video codecs will output pixel data in ARGB, some others in RGB, and some other in YUV420. Therefore, we will need to Convert these frames into something all hardware can use natively. I call these converted frames, MediaBlocks . These MediaBlocks will contain uncompressed data in standard Audio and Video formats that all hardware is able to receive. The process described above is implemented in 3 different layers: The MediaContainer wraps an input stream. This layer keeps track of a MediaComponentSet which is nothing more than a collecttion of MediaComponent objects. Each MediaComponent holds packet caching , frame decoding , and block conversion logic. It provides the following important functionality: We call Open to open the input stream and detect the different stream components. This also determines the codecs to use. We call Read to read the next available packet and store it in its corresponding component (audio, video, subtitle, data, etc) We call Decode to read the following packet from the queue that each of the components hold, and return a set of frames. Finally, we call Convert to turn a given frame into a MediaBlock . The MediaEngine wraps a MediaContainer and it is responsible for executing commands to control the input stream (Play, Pause, Stop, Seek, etc.) while keeping keeping 3 background workers. The PacketReadingWroker is designed to continuously read packets from the MediaContainer . It will read packets when it needs them and it will pause if it does not need them. This is determined by how much data is in the cache. It will try to keep approximately 1 second of media packets at all times. The FrameDecodingWroker gets the packets that the PacketReadingWorker writes and decodes them into frames. It then converts those frames into blocks and writes them to a MediaBlockBuffer . This block buffer can then be read by something else (the following worker described here) so its contents can be rendered. Finally, the BlockRenderingWorker reads blocks form the MediaBlockBuffer s and sends those blocks to a plat-from specific IMediaRenderer . At the highest level, we have a MediaElement . It wraps a MediaEngine and it contains platform-specific implementation of methods to perform stuff like audio rendering, video rendering, subtitle rendering, and property synchronization between the MediaEngine and itself. A high-level diagram is provided as additional reference below. Some Work In Progress Your help is welcome! I am planning the next version of this control, Floyd . See the Issues section. Windows: Compiling, Running and Testing Please note that I am unable to distribute FFmpeg's binaries because I don't know if I am allowed to do so. Follow the instructions below to compile, run and test FFME. Clone this repository. Download the FFmpeg shared binaries for your target architecture: 32-bit or 64-bit . Extract the contents of the zip file you just downloaded and go to the bin folder that got extracted. You should see 3 exe files and multiple dll files. Select and copy all of them. Now paste all files from the prior step onto a well-known folder. Take note of the full path. (I used c:\\ffmpeg\\ ) Open the solution and set the Unosquare.FFME.Windows.Sample project as the startup project. You can do this by right clicking on the project and selecting Set as startup project . Please note that you will need Visual Studio 2019 with dotnet Core 3.0 SDK for your target architecture installed. Under the Unosquare.FFME.Windows.Sample project, find the file App.xaml.cs and under the constructor, locate the line Library.FFmpegDirectory = @\"c:\\ffmpeg\"; and replace the path so that it points to the folder where you extracted your FFmpeg binaries (dll files). Click on Start to run the project. You should see a sample media player. Click on the Open icon located at the bottom right and enter a URL or path to a media file. The file or URL should play immediately, and all the properties should display to the right of the media display by clicking on the Info icon. You can use the resulting compiled assemblies in your project without further dependencies. Look for ffme.win.dll . Thanks In no particular order To the FFmpeg team for making the Swiss Army Knife of media. I encourage you to donate to them. To Kyle Schwarz for creating and making Zeranoe FFmpeg builds available to everyone . To the NAudio team for making the best audio library out there for .NET -- one day I will contribute some improvements I have noticed they need. To Ruslan Balanukhin for his FFmpeg interop bindings generator tool: FFmpeg.AutoGen . To Martin Bohme for his tutorial on creating a video player with FFmpeg. To Barry Mieny for his beautiful FFmpeg logo Similar Projects Meta Vlc Microsoft FFmpeg Interop WPF-MediaKit LibVLC.NET Microsoft Player Framework License Please refer to the LICENSE file for more information."
  },
  "api/Unosquare.FFME.Common.RenderingSubtitlesEventArgs.html": {
    "href": "api/Unosquare.FFME.Common.RenderingSubtitlesEventArgs.html",
    "title": "Class RenderingSubtitlesEventArgs | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class RenderingSubtitlesEventArgs Provides the subtitles rendering payload as event arguments. Inheritance Object EventArgs RenderingEventArgs RenderingSubtitlesEventArgs Inherited Members RenderingEventArgs.EngineState RenderingEventArgs.Stream RenderingEventArgs.Clock RenderingEventArgs.StartTime RenderingEventArgs.Duration EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class RenderingSubtitlesEventArgs : RenderingEventArgs Properties Cancel When set to true, clears the current subtitle and prevents the subtitle block from being rendered. Declaration public bool Cancel { get; set; } Property Value Type Description Boolean Format Gets the type of subtitle format the original subtitle text is in. Declaration public AVSubtitleType Format { get; } Property Value Type Description AVSubtitleType OriginalText Gets the text as originally decoded including all markup and formatting. Declaration public List<string> OriginalText { get; } Property Value Type Description List < String > Text Gets the text stripped out of ASS or SRT formatting. This is what the default subtitle renderer will display on the screen. Declaration public List<string> Text { get; } Property Value Type Description List < String > See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.LegacyAudioException.html": {
    "href": "api/Unosquare.FFME.Common.LegacyAudioException.html",
    "title": "Class LegacyAudioException | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class LegacyAudioException An exception representing an error in Windows Multimedia Audio. Inheritance Object LegacyAudioException Namespace : Unosquare.FFME.Common Syntax [Serializable] public sealed class LegacyAudioException : MediaContainerException Constructors LegacyAudioException() Initializes a new instance of the LegacyAudioException class. Declaration public LegacyAudioException() LegacyAudioException(String) Initializes a new instance of the LegacyAudioException class. Declaration public LegacyAudioException(string message) Parameters Type Name Description String message The error message. LegacyAudioException(String, Exception) Initializes a new instance of the LegacyAudioException class. Declaration public LegacyAudioException(string message, Exception innerException) Parameters Type Name Description String message The error message. Exception innerException The inner exception. LegacyAudioException(LegacyAudioResult, String) Initializes a new instance of the LegacyAudioException class. Declaration public LegacyAudioException(LegacyAudioResult result, string functionName) Parameters Type Name Description LegacyAudioResult result The result returned by the Windows API call. String functionName The name of the Windows API that failed. Properties FunctionName Gets the name of the function that failed. Declaration public string FunctionName { get; } Property Value Type Description String Result Gets the Windows API result code. Declaration public LegacyAudioResult Result { get; } Property Value Type Description LegacyAudioResult Methods GetObjectData(SerializationInfo, StreamingContext) Declaration [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)] public override void GetObjectData(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.BitmapDataBuffer.html": {
    "href": "api/Unosquare.FFME.Common.BitmapDataBuffer.html",
    "title": "Class BitmapDataBuffer | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class BitmapDataBuffer Contains metadata about a raw bitmap back-buffer. Inheritance Object BitmapDataBuffer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class BitmapDataBuffer Properties BitsPerPixel Gets the bits per pixel. Declaration public int BitsPerPixel { get; } Property Value Type Description Int32 BufferLength Gets the length of the buffer (Stride x Pixel Height). Declaration public uint BufferLength { get; } Property Value Type Description UInt32 BytesPerPixel Gets the bytes per pixel. Declaration public int BytesPerPixel { get; } Property Value Type Description Int32 DpiX Gets the DPI on the X axis. Declaration public double DpiX { get; } Property Value Type Description Double DpiY Gets the DPI on the Y axis. Declaration public double DpiY { get; } Property Value Type Description Double Palette Gets the palette. Declaration public BitmapPalette Palette { get; } Property Value Type Description BitmapPalette PixelFormat Gets the pixel format. Declaration public PixelFormat PixelFormat { get; } Property Value Type Description PixelFormat PixelHeight Gets height of the bitmap. Declaration public int PixelHeight { get; } Property Value Type Description Int32 PixelWidth Gets width of the bitmap. Declaration public int PixelWidth { get; } Property Value Type Description Int32 Scan0 Gets a pointer to the raw pixel data. Declaration public IntPtr Scan0 { get; } Property Value Type Description IntPtr Stride Gets the byte width of each row of pixels. Declaration public int Stride { get; } Property Value Type Description Int32 UpdateRect Gets the update rect. Declaration public Int32Rect UpdateRect { get; } Property Value Type Description Int32Rect Methods CreateDrawingBitmap() Creates a Drawing Bitmap from this data buffer. Declaration public Bitmap CreateDrawingBitmap() Returns Type Description Bitmap The bitmap. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.RenderingVideoEventArgs.html": {
    "href": "api/Unosquare.FFME.Common.RenderingVideoEventArgs.html",
    "title": "Class RenderingVideoEventArgs | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class RenderingVideoEventArgs The video rendering event arguments. Inheritance Object EventArgs RenderingEventArgs RenderingVideoEventArgs Inherited Members RenderingEventArgs.EngineState RenderingEventArgs.Stream RenderingEventArgs.Clock RenderingEventArgs.StartTime RenderingEventArgs.Duration EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class RenderingVideoEventArgs : RenderingEventArgs Properties Bitmap Gets the writable bitmap filled with the video frame pixels. Feel free to capture or change this buffer. Declaration public BitmapDataBuffer Bitmap { get; } Property Value Type Description BitmapDataBuffer ClosedCaptions Gets the closed caption decoded packets. Declaration public ReadOnlyCollection<ClosedCaptionPacket> ClosedCaptions { get; } Property Value Type Description ReadOnlyCollection < ClosedCaptionPacket > PictureNumber Gets the display picture number (frame number). If not set by the decoder, this attempts to obtain it by dividing the start time by the frame duration. Declaration public long PictureNumber { get; } Property Value Type Description Int64 SmtpeTimeCode Gets the SMTPE time code. Declaration public string SmtpeTimeCode { get; } Property Value Type Description String See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.RenderingAudioEventArgs.html": {
    "href": "api/Unosquare.FFME.Common.RenderingAudioEventArgs.html",
    "title": "Class RenderingAudioEventArgs | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class RenderingAudioEventArgs Provides the audio samples rendering payload as event arguments. Inheritance Object EventArgs RenderingEventArgs RenderingAudioEventArgs Inherited Members RenderingEventArgs.EngineState RenderingEventArgs.Stream RenderingEventArgs.Clock RenderingEventArgs.StartTime RenderingEventArgs.Duration EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public sealed class RenderingAudioEventArgs : RenderingEventArgs Properties BitsPerSample Gets the number of bits per sample. Declaration public int BitsPerSample { get; } Property Value Type Description Int32 Buffer Gets a the raw data buffer going into the audio device. Samples are provided in PCM 16-bit signed, interleaved stereo. Declaration public IReadOnlyList<byte> Buffer { get; } Property Value Type Description IReadOnlyList < Byte > BufferLength Gets the length in bytes of the samples buffer. Declaration public int BufferLength { get; } Property Value Type Description Int32 ChannelCount Gets the number of channels. Declaration public int ChannelCount { get; } Property Value Type Description Int32 Latency Gets the latency between the audio buffer position and the real-time playback clock. Declaration public TimeSpan Latency { get; } Property Value Type Description TimeSpan SampleRate Gets the number of samples in 1 second. Declaration public int SampleRate { get; } Property Value Type Description Int32 Samples Gets the number of samples in the buffer for all channels. Declaration public int Samples { get; } Property Value Type Description Int32 SamplesPerChannel Gets the number of samples in the buffer per channel. Declaration public int SamplesPerChannel { get; } Property Value Type Description Int32 Methods GetBufferData() Gets a the raw data buffer going into the audio device. Samples are provided in PCM 16-bit signed, interleaved stereo. Declaration public byte[] GetBufferData() Returns Type Description Byte [] The buffer data as an array. See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.MediaElement.html": {
    "href": "api/Unosquare.FFME.MediaElement.html",
    "title": "Class MediaElement | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaElement Represents a control that contains audio and/or video. In contrast with System.Windows.Controls.MediaElement, this version uses the FFmpeg library to perform reading and decoding of media streams. Inheritance Object MediaElement Implements IUriContext Namespace : Unosquare.FFME Syntax public sealed class MediaElement : UserControl, IUriContext Constructors MediaElement() Initializes a new instance of the MediaElement class. Declaration public MediaElement() Fields BalanceProperty The DependencyProperty for the MediaElement.Balance property. Declaration public static readonly DependencyProperty BalanceProperty Field Value Type Description DependencyProperty ClosedCaptionsChannelProperty The DependencyProperty for the MediaElement.ClosedCaptionsChannel property. Declaration public static readonly DependencyProperty ClosedCaptionsChannelProperty Field Value Type Description DependencyProperty IsMutedProperty The DependencyProperty for the MediaElement.IsMuted property. Declaration public static readonly DependencyProperty IsMutedProperty Field Value Type Description DependencyProperty LoadedBehaviorProperty The DependencyProperty for the MediaElement.LoadedBehavior property. Declaration public static readonly DependencyProperty LoadedBehaviorProperty Field Value Type Description DependencyProperty LoopingBehaviorProperty The DependencyProperty for the MediaElement.LoopingBehavior property. Declaration public static readonly DependencyProperty LoopingBehaviorProperty Field Value Type Description DependencyProperty PositionProperty The DependencyProperty for the MediaElement.Position property. Declaration public static readonly DependencyProperty PositionProperty Field Value Type Description DependencyProperty ScrubbingEnabledProperty The DependencyProperty for the MediaElement.ScrubbingEnabled property. Declaration public static readonly DependencyProperty ScrubbingEnabledProperty Field Value Type Description DependencyProperty SourceProperty DependencyProperty for FFmpegMediaElement Source property. Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty SpeedRatioProperty The DependencyProperty for the MediaElement.SpeedRatio property. Declaration public static readonly DependencyProperty SpeedRatioProperty Field Value Type Description DependencyProperty StretchDirectionProperty DependencyProperty for StretchDirection property. Declaration public static readonly DependencyProperty StretchDirectionProperty Field Value Type Description DependencyProperty StretchProperty DependencyProperty for Stretch property. Declaration public static readonly DependencyProperty StretchProperty Field Value Type Description DependencyProperty UnloadedBehaviorProperty The DependencyProperty for the MediaElement.UnloadedBehavior property. Declaration public static readonly DependencyProperty UnloadedBehaviorProperty Field Value Type Description DependencyProperty VolumeProperty The DependencyProperty for the MediaElement.Volume property. Declaration public static readonly DependencyProperty VolumeProperty Field Value Type Description DependencyProperty Properties Balance Gets/Sets the Balance property on the MediaElement. Declaration public double Balance { get; set; } Property Value Type Description Double ClosedCaptionsChannel Gets/Sets the ClosedCaptionsChannel property on the MediaElement. Note: Valid values are from 0 to 1. Declaration public CaptionsChannel ClosedCaptionsChannel { get; set; } Property Value Type Description CaptionsChannel IsMuted Gets/Sets the IsMuted property on the MediaElement. Declaration public bool IsMuted { get; set; } Property Value Type Description Boolean LoadedBehavior Specifies the action that the media element should execute when it is loaded. The default behavior is that it is under manual control (i.e. the caller should call methods such as Play in order to play the media). If a source is set, then the default behavior changes to to be playing the media. If a source is set and a loaded behavior is also set, then the loaded behavior takes control. Declaration public MediaPlaybackState LoadedBehavior { get; set; } Property Value Type Description MediaPlaybackState LoopingBehavior Specifies how the media should behave when it has ended. The default behavior is to Pause the media. Declaration public MediaPlaybackState LoopingBehavior { get; set; } Property Value Type Description MediaPlaybackState Position Gets/Sets the Position property on the MediaElement. Declaration public TimeSpan Position { get; set; } Property Value Type Description TimeSpan RendererOptions Provides access to various internal media renderer options. The default options are optimal to work for most media streams. This is an advanced feature and it is not recommended to change these options without careful consideration. Declaration public RendererOptions RendererOptions { get; } Property Value Type Description RendererOptions ScrubbingEnabled Gets or sets a value that indicates whether the MediaElement will update frames for seek operations while paused. This is a dependency property. Declaration public bool ScrubbingEnabled { get; set; } Property Value Type Description Boolean Source Gets/Sets the Source on this MediaElement. The Source property is the Uri of the media to be played. Declaration public Uri Source { get; set; } Property Value Type Description Uri SpeedRatio Gets/Sets the SpeedRatio property on the MediaElement. Declaration public double SpeedRatio { get; set; } Property Value Type Description Double Stretch Gets/Sets the Stretch on this MediaElement. The Stretch property determines how large the MediaElement will be drawn. Declaration public Stretch Stretch { get; set; } Property Value Type Description Stretch StretchDirection Gets/Sets the stretch direction of the ViewBox, which determines the restrictions on scaling that are applied to the content inside the ViewBox. For instance, this property can be used to prevent the content from being smaller than its native size or larger than its native size. Declaration public StretchDirection StretchDirection { get; set; } Property Value Type Description StretchDirection UnloadedBehavior Specifies how the underlying media engine's resources should be handled when the unloaded event gets fired. The default behavior is to Close and release the resources. Declaration public MediaPlaybackState UnloadedBehavior { get; set; } Property Value Type Description MediaPlaybackState Volume Gets/Sets the Volume property on the MediaElement. Note: Valid values are from 0 to 1. Declaration public double Volume { get; set; } Property Value Type Description Double Methods CaptureBitmapAsync() Captures the currently displayed video image and returns a GDI bitmap. Declaration public ConfiguredTaskAwaitable<Drawing.Bitmap> CaptureBitmapAsync() Returns Type Description ConfiguredTaskAwaitable < Drawing.Bitmap > The GDI bitmap copied from the video renderer. Events AudioDeviceStopped Occurs when the currently selected audio device stops or loses its buffer. Call the method and select a new audio device in order to output to a new audio device Declaration public event EventHandler AudioDeviceStopped Event Type Type Description EventHandler FFmpegMessageLogged Occurs when a logging message from the FFmpeg library has been received. This is shared across all instances of Media Elements. Declaration public static event EventHandler<MediaLogMessageEventArgs> FFmpegMessageLogged Event Type Type Description EventHandler < MediaLogMessageEventArgs > Remarks This event is raised on a background thread. All interaction with UI elements requires calls on their corresponding dispatcher. RenderingAudio Occurs right before the audio is added to the audio buffer. You can update the bytes before they are queued. Ensure you handle this quickly before you get choppy audio. Declaration public event EventHandler<RenderingAudioEventArgs> RenderingAudio Event Type Type Description EventHandler < RenderingAudioEventArgs > RenderingSubtitles Occurs right before the subtitles are rendered. You can update the text. Ensure you handle this quickly before you get choppy subtitles. Declaration public event EventHandler<RenderingSubtitlesEventArgs> RenderingSubtitles Event Type Type Description EventHandler < RenderingSubtitlesEventArgs > RenderingVideo Occurs right before the video is presented on the screen. You can update the pixels on the bitmap before it is rendered on the screen. Or you could take a screen shot. Ensure you handle this very quickly as it runs on the UI thread. Declaration public event EventHandler<RenderingVideoEventArgs> RenderingVideo Event Type Type Description EventHandler < RenderingVideoEventArgs > Implements IUriContext Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.html": {
    "href": "api/Unosquare.FFME.Common.html",
    "title": "Namespace Unosquare.FFME.Common | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Namespace Unosquare.FFME.Common Classes AudioDeviceInfo<T> Represents a device identifier. BitmapDataBuffer Contains metadata about a raw bitmap back-buffer. DirectSoundDeviceInfo Represents information about a DirectSound audio device. LegacyAudioDeviceInfo Represents information about a legacy WinMM audio device. LegacyAudioException An exception representing an error in Windows Multimedia Audio. RendererOptions Provides access to various internal media renderer options. RenderingAudioEventArgs Provides the audio samples rendering payload as event arguments. RenderingEventArgs A base class to represent media block rendering event arguments. RenderingSubtitlesEventArgs Provides the subtitles rendering payload as event arguments. RenderingVideoEventArgs The video rendering event arguments. Enums LegacyAudioResult Windows multimedia error codes from mmsystem.h. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.FFME.Common.RenderingEventArgs.html": {
    "href": "api/Unosquare.FFME.Common.RenderingEventArgs.html",
    "title": "Class RenderingEventArgs | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class RenderingEventArgs A base class to represent media block rendering event arguments. Inheritance Object EventArgs RenderingEventArgs RenderingAudioEventArgs RenderingSubtitlesEventArgs RenderingVideoEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Unosquare.FFME.Common Syntax public abstract class RenderingEventArgs : EventArgs Constructors RenderingEventArgs(IMediaEngineState, StreamInfo, TimeSpan, TimeSpan, TimeSpan) Initializes a new instance of the RenderingEventArgs class. Declaration protected RenderingEventArgs(IMediaEngineState engineState, StreamInfo stream, TimeSpan startTime, TimeSpan duration, TimeSpan clock) Parameters Type Name Description IMediaEngineState engineState The media engine state. StreamInfo stream The stream. TimeSpan startTime The position. TimeSpan duration The duration. TimeSpan clock The clock. Properties Clock Gets the clock position at which the media was called for rendering. Declaration public TimeSpan Clock { get; } Property Value Type Description TimeSpan Duration Gets how long this media has to be presented. Declaration public TimeSpan Duration { get; } Property Value Type Description TimeSpan EngineState Provides access to the underlying media engine state. Declaration public IMediaEngineState EngineState { get; } Property Value Type Description IMediaEngineState StartTime Gets the starting time at which this media has to be presented. Declaration public TimeSpan StartTime { get; } Property Value Type Description TimeSpan Stream Provides Stream Information coming from the media container. Declaration public StreamInfo Stream { get; } Property Value Type Description StreamInfo See Also EventArgs Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}